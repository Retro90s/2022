{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-067bc74c62e2fb6effae.js","mappings":"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","sources":["webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/projects.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/assets/location.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header.tsx"],"sourcesContent":["/** @jsx jsx */\n/* eslint no-shadow: 0 */\nimport { jsx, Container, Themed, Box } from \"theme-ui\"\nimport { useSpring, animated, config } from \"react-spring\"\nimport { rgba } from \"polished\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Header from \"./header\"\nimport Card from \"./card\"\n\ntype Props = {\n  projects: {\n    slug: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }[]\n}\n\nconst Projects = ({ projects }: Props) => {\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    delay: 600,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Header />\n        <Container>\n          <Themed.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            {` `}\n            to learn how to setup them.\n          </Themed.p>\n          <Themed.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            .\n          </Themed.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <Header />\n      <Box as=\"main\" variant=\"layout.main\">\n        <animated.div style={fadeUpProps}>\n          <Container\n            sx={{\n              mt: `-8rem`,\n              display: `grid`,\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n              gridGap: 4,\n              alignItems: `flex-start`,\n            }}\n          >\n            {projects.map((project, index) => {\n              const val = project.cover.childImageSharp.gatsbyImageData.backgroundColor as string\n              const shadow = rgba(val, 0.15)\n\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n              const shadowArray = px.map((v) => `${shadow} 0px ${v} ${v} 0px`)\n\n              return <Card key={project.slug} eager={index === 0} item={project} overlay={val} shadow={shadowArray} />\n            })}\n          </Container>\n        </animated.div>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 770, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmiliaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n","import * as React from \"react\"\n\nconst Location = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\n    <path\n      className=\"primary\"\n      fill=\"currentColor\"\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\n    />\n    <path\n      className=\"secondary\"\n      fill=\"currentColor\"\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\n    />\n  </svg>\n)\n\nexport default Location\n","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport HeaderBackground from \"./header-background\"\nimport Location from \"../assets/location\"\nimport SocialMediaList from \"./social-media-list\"\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst Header = () => {\n  const { name, location, assetsPath } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 140, height: 140, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeUpPropsDelay = useSpring({\n    config: config.slow,\n    delay: 250,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.projectHead\">\n      <HeaderBackground />\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\n        <animated.div style={fadeProps}>\n          <div\n            sx={{\n              overflow: `hidden`,\n              borderRadius: `full`,\n              height: [`100px`, `140px`],\n              width: [`100px`, `140px`],\n              display: `inline-block`,\n              boxShadow: `lg`,\n              \"> div:not([data-placeholder='true'])\": {\n                height: [`100px !important`, `140px !important`],\n                width: [`100px !important`, `140px !important`],\n              },\n            }}\n          >\n            {avatar?.file?.childImageSharp?.gatsbyImageData ? (\n              <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n            ) : (\n              <div\n                sx={{\n                  fontSize: 0,\n                  position: `absolute`,\n                  top: 0,\n                  left: 0,\n                  width: `100% !important`,\n                  right: 0,\n                  p: 3,\n                  backgroundColor: `red.2`,\n                }}\n                data-placeholder=\"true\"\n              >\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\n              </div>\n            )}\n          </div>\n        </animated.div>\n        <animated.div style={fadeUpProps}>\n          <Heading as=\"h1\" variant=\"styles.h1\">\n            {name}\n          </Heading>\n        </animated.div>\n        <animated.div style={fadeUpPropsDelay}>\n          <Flex\n            sx={{\n              svg: {\n                width: `20px`,\n                height: `20px`,\n                \".primary\": { color: `iconPrimary` },\n                \".secondary\": { color: `iconSecondary` },\n                mr: 2,\n              },\n              justifyContent: `center`,\n              alignItems: `center`,\n              color: `text`,\n            }}\n          >\n            <Location /> {location}\n          </Flex>\n        </animated.div>\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\n          <animated.div style={fadeLongProps}>\n            <SocialMediaList />\n          </animated.div>\n        </div>\n      </div>\n    </Flex>\n  )\n}\n\nexport default Header\n"],"names":["Projects","projects","fadeUpProps","useSpring","config","delay","from","opacity","transform","to","role","href","as","variant","animated","style","sx","mt","display","gridTemplateColumns","gridGap","alignItems","val","project","shadow","rgba","shadowArray","px","key","eager","index","item","overlay","props","allProject","Location","xmlns","viewBox","className","fill","d","Header","useEmiliaConfig","name","location","assetsPath","avatar","useStaticQuery","fadeUpPropsDelay","fadeProps","fadeLongProps","textAlign","my","zIndex","overflow","borderRadius","height","width","boxShadow","image","alt","fontSize","position","top","left","right","p","backgroundColor","svg","color","mr","justifyContent","mb","a","mx"],"sourceRoot":""}