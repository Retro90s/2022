{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-eed009301014c99a53ff.js","mappings":"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","sources":["webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/projects.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/assets/location.tsx","webpack://2022/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header.tsx"],"sourcesContent":["/** @jsx jsx */\n/* eslint no-shadow: 0 */\nimport { jsx, Container, Themed, Box } from \"theme-ui\"\nimport { useSpring, animated, config } from \"react-spring\"\nimport { rgba } from \"polished\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Header from \"./header\"\nimport Card from \"./card\"\n\ntype Props = {\n  projects: {\n    slug: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }[]\n}\n\nconst Projects = ({ projects }: Props) => {\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    delay: 600,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Header />\n        <Container>\n          <Themed.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              ðŸ‘‹\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            {` `}\n            to learn how to setup them.\n          </Themed.p>\n          <Themed.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emilia\">\n              README\n            </Themed.a>\n            .\n          </Themed.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <Header />\n      <Box as=\"main\" variant=\"layout.main\">\n        <animated.div style={fadeUpProps}>\n          <Container\n            sx={{\n              mt: `-8rem`,\n              display: `grid`,\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n              gridGap: 4,\n              alignItems: `flex-start`,\n            }}\n          >\n            {projects.map((project, index) => {\n              const val = project.cover.childImageSharp.gatsbyImageData.backgroundColor as string\n              const shadow = rgba(val, 0.15)\n\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n              const shadowArray = px.map((v) => `${shadow} 0px ${v} ${v} 0px`)\n\n              return <Card key={project.slug} eager={index === 0} item={project} overlay={val} shadow={shadowArray} />\n            })}\n          </Container>\n        </animated.div>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 770, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmiliaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n","import * as React from \"react\"\n\nconst Location = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\n    <path\n      className=\"primary\"\n      fill=\"currentColor\"\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\n    />\n    <path\n      className=\"secondary\"\n      fill=\"currentColor\"\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\n    />\n  </svg>\n)\n\nexport default Location\n","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport HeaderBackground from \"./header-background\"\nimport Location from \"../assets/location\"\nimport SocialMediaList from \"./social-media-list\"\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst Header = () => {\n  const { name, location, assetsPath } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 140, height: 140, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeUpPropsDelay = useSpring({\n    config: config.slow,\n    delay: 250,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.projectHead\">\n      <HeaderBackground />\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\n        <animated.div style={fadeProps}>\n          <div\n            sx={{\n              overflow: `hidden`,\n              borderRadius: `full`,\n              height: [`100px`, `140px`],\n              width: [`100px`, `140px`],\n              display: `inline-block`,\n              boxShadow: `lg`,\n              \"> div:not([data-placeholder='true'])\": {\n                height: [`100px !important`, `140px !important`],\n                width: [`100px !important`, `140px !important`],\n              },\n            }}\n          >\n            {avatar?.file?.childImageSharp?.gatsbyImageData ? (\n              <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n            ) : (\n              <div\n                sx={{\n                  fontSize: 0,\n                  position: `absolute`,\n                  top: 0,\n                  left: 0,\n                  width: `100% !important`,\n                  right: 0,\n                  p: 3,\n                  backgroundColor: `red.2`,\n                }}\n                data-placeholder=\"true\"\n              >\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\n              </div>\n            )}\n          </div>\n        </animated.div>\n        <animated.div style={fadeUpProps}>\n          <Heading as=\"h1\" variant=\"styles.h1\">\n            {name}\n          </Heading>\n        </animated.div>\n        <animated.div style={fadeUpPropsDelay}>\n          <Flex\n            sx={{\n              svg: {\n                width: `20px`,\n                height: `20px`,\n                \".primary\": { color: `iconPrimary` },\n                \".secondary\": { color: `iconSecondary` },\n                mr: 2,\n              },\n              justifyContent: `center`,\n              alignItems: `center`,\n              color: `text`,\n            }}\n          >\n            <Location /> {location}\n          </Flex>\n        </animated.div>\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\n          <animated.div style={fadeLongProps}>\n            <SocialMediaList />\n          </animated.div>\n        </div>\n      </div>\n    </Flex>\n  )\n}\n\nexport default Header\n"],"names":["projects","fadeUpProps","slow","useSpring","config","from","opacity","transform","to","length","p","jsx","Layout","Header","Container","Themed","a","as","Box","variant","div","animated","sx","mt","display","gridTemplateColumns","gridGap","alignItems","map","project","index","val","cover","childImageSharp","gatsbyImageData","backgroundColor","shadow","px","rgba","v","key","Card","slug","eager","item","overlay","props","allProject","data","nodes","React","Projects","viewBox","className","fill","d","name","location","assetsPath","useEmiliaConfig","avatar","useStaticQuery","fadeUpPropsDelay","delay","fadeProps","fadeLongProps","Flex","textAlign","my","HeaderBackground","zIndex","style","overflow","height","width","boxShadow","file","image","alt","fontSize","GatsbyImage","position","top","left","right","svg","color","mr","Heading","justifyContent","mb","Location","mx","SocialMediaList"],"sourceRoot":""}